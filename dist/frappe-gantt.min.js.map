{"version":3,"file":"frappe-gantt.min.js","sources":["../src/date_utils.js","../src/svg_utils.js","../src/bar.js","../src/arrow.js","../src/popup.js","../src/index.js"],"sourcesContent":["const YEAR = 'year';\r\nconst MONTH = 'month';\r\nconst DAY = 'day';\r\nconst HOUR = 'hour';\r\nconst MINUTE = 'minute';\r\nconst SECOND = 'second';\r\nconst MILLISECOND = 'millisecond';\r\n\r\nconst month_names = {\r\n    en: [\r\n        'January',\r\n        'February',\r\n        'March',\r\n        'April',\r\n        'May',\r\n        'June',\r\n        'July',\r\n        'August',\r\n        'September',\r\n        'October',\r\n        'November',\r\n        'December',\r\n    ],\r\n    es: [\r\n        'Enero',\r\n        'Febrero',\r\n        'Marzo',\r\n        'Abril',\r\n        'Mayo',\r\n        'Junio',\r\n        'Julio',\r\n        'Agosto',\r\n        'Septiembre',\r\n        'Octubre',\r\n        'Noviembre',\r\n        'Diciembre',\r\n    ],\r\n    ru: [\r\n        'Январь',\r\n        'Февраль',\r\n        'Март',\r\n        'Апрель',\r\n        'Май',\r\n        'Июнь',\r\n        'Июль',\r\n        'Август',\r\n        'Сентябрь',\r\n        'Октябрь',\r\n        'Ноябрь',\r\n        'Декабрь',\r\n    ],\r\n    ptBr: [\r\n        'Janeiro',\r\n        'Fevereiro',\r\n        'Março',\r\n        'Abril',\r\n        'Maio',\r\n        'Junho',\r\n        'Julho',\r\n        'Agosto',\r\n        'Setembro',\r\n        'Outubro',\r\n        'Novembro',\r\n        'Dezembro',\r\n    ],\r\n    fr: [\r\n        'Janvier',\r\n        'Février',\r\n        'Mars',\r\n        'Avril',\r\n        'Mai',\r\n        'Juin',\r\n        'Juillet',\r\n        'Août',\r\n        'Septembre',\r\n        'Octobre',\r\n        'Novembre',\r\n        'Décembre',\r\n    ],\r\n    tr: [\r\n        'Ocak',\r\n        'Şubat',\r\n        'Mart',\r\n        'Nisan',\r\n        'Mayıs',\r\n        'Haziran',\r\n        'Temmuz',\r\n        'Ağustos',\r\n        'Eylül',\r\n        'Ekim',\r\n        'Kasım',\r\n        'Aralık',\r\n    ],\r\n    zh: [\r\n        '一月',\r\n        '二月',\r\n        '三月',\r\n        '四月',\r\n        '五月',\r\n        '六月',\r\n        '七月',\r\n        '八月',\r\n        '九月',\r\n        '十月',\r\n        '十一月',\r\n        '十二月',\r\n    ],\r\n};\r\n\r\nexport default {\r\n    parse(date, date_separator = '-', time_separator = /[.:]/) {\r\n        if (date instanceof Date) {\r\n            return date;\r\n        }\r\n        if (typeof date === 'string') {\r\n            let date_parts, time_parts;\r\n            const parts = date.split(' ');\r\n\r\n            date_parts = parts[0]\r\n                .split(date_separator)\r\n                .map((val) => parseInt(val, 10));\r\n            time_parts = parts[1] && parts[1].split(time_separator);\r\n\r\n            // month is 0 indexed\r\n            date_parts[1] = date_parts[1] - 1;\r\n\r\n            let vals = date_parts;\r\n\r\n            if (time_parts && time_parts.length) {\r\n                if (time_parts.length == 4) {\r\n                    time_parts[3] = '0.' + time_parts[3];\r\n                    time_parts[3] = parseFloat(time_parts[3]) * 1000;\r\n                }\r\n                vals = vals.concat(time_parts);\r\n            }\r\n\r\n            return new Date(...vals);\r\n        }\r\n    },\r\n\r\n    to_string(date, with_time = false) {\r\n        if (!(date instanceof Date)) {\r\n            throw new TypeError('Invalid argument type');\r\n        }\r\n        const vals = this.get_date_values(date).map((val, i) => {\r\n            if (i === 1) {\r\n                // add 1 for month\r\n                val = val + 1;\r\n            }\r\n\r\n            if (i === 6) {\r\n                return padStart(val + '', 3, '0');\r\n            }\r\n\r\n            return padStart(val + '', 2, '0');\r\n        });\r\n        const date_string = `${vals[0]}-${vals[1]}-${vals[2]}`;\r\n        const time_string = `${vals[3]}:${vals[4]}:${vals[5]}.${vals[6]}`;\r\n\r\n        return date_string + (with_time ? ' ' + time_string : '');\r\n    },\r\n\r\n    format(date, format_string = 'YYYY-MM-DD HH:mm:ss.SSS', lang = 'en') {\r\n        const values = this.get_date_values(date).map((d) => padStart(d, 2, 0));\r\n        const format_map = {\r\n            YYYY: values[0],\r\n            MM: padStart(+values[1] + 1, 2, 0),\r\n            DD: values[2],\r\n            HH: values[3],\r\n            mm: values[4],\r\n            ss: values[5],\r\n            SSS: values[6],\r\n            D: values[2],\r\n            MMMM: month_names[lang][+values[1]],\r\n            MMM: month_names[lang][+values[1]],\r\n        };\r\n\r\n        let str = format_string;\r\n        const formatted_values = [];\r\n\r\n        Object.keys(format_map)\r\n            .sort((a, b) => b.length - a.length) // big string first\r\n            .forEach((key) => {\r\n                if (str.includes(key)) {\r\n                    str = str.replace(key, `$${formatted_values.length}`);\r\n                    formatted_values.push(format_map[key]);\r\n                }\r\n            });\r\n\r\n        formatted_values.forEach((value, i) => {\r\n            str = str.replace(`$${i}`, value);\r\n        });\r\n\r\n        return str;\r\n    },\r\n\r\n    diff(date_a, date_b, scale = DAY) {\r\n        let milliseconds, seconds, hours, minutes, days, months, years;\r\n\r\n        milliseconds = date_a - date_b;\r\n        seconds = milliseconds / 1000;\r\n        minutes = seconds / 60;\r\n        hours = minutes / 60;\r\n        days = hours / 24;\r\n        months = days / 30;\r\n        years = months / 12;\r\n\r\n        if (!scale.endsWith('s')) {\r\n            scale += 's';\r\n        }\r\n\r\n        return Math.floor(\r\n            {\r\n                milliseconds,\r\n                seconds,\r\n                minutes,\r\n                hours,\r\n                days,\r\n                months,\r\n                years,\r\n            }[scale]\r\n        );\r\n    },\r\n\r\n    today() {\r\n        const vals = this.get_date_values(new Date()).slice(0, 3);\r\n        return new Date(...vals);\r\n    },\r\n\r\n    now() {\r\n        return new Date();\r\n    },\r\n\r\n    add(date, qty, scale) {\r\n        qty = parseInt(qty, 10);\r\n        const vals = [\r\n            date.getFullYear() + (scale === YEAR ? qty : 0),\r\n            date.getMonth() + (scale === MONTH ? qty : 0),\r\n            date.getDate() + (scale === DAY ? qty : 0),\r\n            date.getHours() + (scale === HOUR ? qty : 0),\r\n            date.getMinutes() + (scale === MINUTE ? qty : 0),\r\n            date.getSeconds() + (scale === SECOND ? qty : 0),\r\n            date.getMilliseconds() + (scale === MILLISECOND ? qty : 0),\r\n        ];\r\n        return new Date(...vals);\r\n    },\r\n\r\n    start_of(date, scale) {\r\n        const scores = {\r\n            [YEAR]: 6,\r\n            [MONTH]: 5,\r\n            [DAY]: 4,\r\n            [HOUR]: 3,\r\n            [MINUTE]: 2,\r\n            [SECOND]: 1,\r\n            [MILLISECOND]: 0,\r\n        };\r\n\r\n        function should_reset(_scale) {\r\n            const max_score = scores[scale];\r\n            return scores[_scale] <= max_score;\r\n        }\r\n\r\n        const vals = [\r\n            date.getFullYear(),\r\n            should_reset(YEAR) ? 0 : date.getMonth(),\r\n            should_reset(MONTH) ? 1 : date.getDate(),\r\n            should_reset(DAY) ? 0 : date.getHours(),\r\n            should_reset(HOUR) ? 0 : date.getMinutes(),\r\n            should_reset(MINUTE) ? 0 : date.getSeconds(),\r\n            should_reset(SECOND) ? 0 : date.getMilliseconds(),\r\n        ];\r\n\r\n        return new Date(...vals);\r\n    },\r\n\r\n    clone(date) {\r\n        return new Date(...this.get_date_values(date));\r\n    },\r\n\r\n    get_date_values(date) {\r\n        return [\r\n            date.getFullYear(),\r\n            date.getMonth(),\r\n            date.getDate(),\r\n            date.getHours(),\r\n            date.getMinutes(),\r\n            date.getSeconds(),\r\n            date.getMilliseconds(),\r\n        ];\r\n    },\r\n\r\n    get_days_in_month(date) {\r\n        const no_of_days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n\r\n        const month = date.getMonth();\r\n\r\n        if (month !== 1) {\r\n            return no_of_days[month];\r\n        }\r\n\r\n        // Feb\r\n        const year = date.getFullYear();\r\n        if ((year % 4 == 0 && year % 100 != 0) || year % 400 == 0) {\r\n            return 29;\r\n        }\r\n        return 28;\r\n    },\r\n};\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart\r\nfunction padStart(str, targetLength, padString) {\r\n    str = str + '';\r\n    targetLength = targetLength >> 0;\r\n    padString = String(typeof padString !== 'undefined' ? padString : ' ');\r\n    if (str.length > targetLength) {\r\n        return String(str);\r\n    } else {\r\n        targetLength = targetLength - str.length;\r\n        if (targetLength > padString.length) {\r\n            padString += padString.repeat(targetLength / padString.length);\r\n        }\r\n        return padString.slice(0, targetLength) + String(str);\r\n    }\r\n}\r\n","export function $(expr, con) {\r\n    return typeof expr === 'string'\r\n        ? (con || document).querySelector(expr)\r\n        : expr || null;\r\n}\r\n\r\nexport function createSVG(tag, attrs) {\r\n    const elem = document.createElementNS('http://www.w3.org/2000/svg', tag);\r\n    for (let attr in attrs) {\r\n        if (attr === 'append_to') {\r\n            const parent = attrs.append_to;\r\n            parent.appendChild(elem);\r\n        } else if (attr === 'innerHTML') {\r\n            elem.innerHTML = attrs.innerHTML;\r\n        } else {\r\n            elem.setAttribute(attr, attrs[attr]);\r\n        }\r\n    }\r\n    return elem;\r\n}\r\n\r\nexport function animateSVG(svgElement, attr, from, to) {\r\n    const animatedSvgElement = getAnimationElement(svgElement, attr, from, to);\r\n\r\n    if (animatedSvgElement === svgElement) {\r\n        // triggered 2nd time programmatically\r\n        // trigger artificial click event\r\n        const event = document.createEvent('HTMLEvents');\r\n        event.initEvent('click', true, true);\r\n        event.eventName = 'click';\r\n        animatedSvgElement.dispatchEvent(event);\r\n    }\r\n}\r\n\r\nfunction getAnimationElement(\r\n    svgElement,\r\n    attr,\r\n    from,\r\n    to,\r\n    dur = '0.4s',\r\n    begin = '0.1s'\r\n) {\r\n    const animEl = svgElement.querySelector('animate');\r\n    if (animEl) {\r\n        $.attr(animEl, {\r\n            attributeName: attr,\r\n            from,\r\n            to,\r\n            dur,\r\n            begin: 'click + ' + begin, // artificial click\r\n        });\r\n        return svgElement;\r\n    }\r\n\r\n    const animateElement = createSVG('animate', {\r\n        attributeName: attr,\r\n        from,\r\n        to,\r\n        dur,\r\n        begin,\r\n        calcMode: 'spline',\r\n        values: from + ';' + to,\r\n        keyTimes: '0; 1',\r\n        keySplines: cubic_bezier('ease-out'),\r\n    });\r\n    svgElement.appendChild(animateElement);\r\n\r\n    return svgElement;\r\n}\r\n\r\nfunction cubic_bezier(name) {\r\n    return {\r\n        ease: '.25 .1 .25 1',\r\n        linear: '0 0 1 1',\r\n        'ease-in': '.42 0 1 1',\r\n        'ease-out': '0 0 .58 1',\r\n        'ease-in-out': '.42 0 .58 1',\r\n    }[name];\r\n}\r\n\r\n$.on = (element, event, selector, callback) => {\r\n    if (!callback) {\r\n        callback = selector;\r\n        $.bind(element, event, callback);\r\n    } else {\r\n        $.delegate(element, event, selector, callback);\r\n    }\r\n};\r\n\r\n$.off = (element, event, handler) => {\r\n    element.removeEventListener(event, handler);\r\n};\r\n\r\n$.bind = (element, event, callback) => {\r\n    event.split(/\\s+/).forEach(function (event) {\r\n        element.addEventListener(event, callback);\r\n    });\r\n};\r\n\r\n$.delegate = (element, event, selector, callback) => {\r\n    element.addEventListener(event, function (e) {\r\n        const delegatedTarget = e.target.closest(selector);\r\n        if (delegatedTarget) {\r\n            e.delegatedTarget = delegatedTarget;\r\n            callback.call(this, e, delegatedTarget);\r\n        }\r\n    });\r\n};\r\n\r\n$.closest = (selector, element) => {\r\n    if (!element) return null;\r\n\r\n    if (element.matches(selector)) {\r\n        return element;\r\n    }\r\n\r\n    return $.closest(selector, element.parentNode);\r\n};\r\n\r\n$.attr = (element, attr, value) => {\r\n    if (!value && typeof attr === 'string') {\r\n        return element.getAttribute(attr);\r\n    }\r\n\r\n    if (typeof attr === 'object') {\r\n        for (let key in attr) {\r\n            $.attr(element, key, attr[key]);\r\n        }\r\n        return;\r\n    }\r\n\r\n    element.setAttribute(attr, value);\r\n};\r\n","import date_utils from './date_utils';\r\nimport { $, createSVG, animateSVG } from './svg_utils';\r\n\r\nexport default class Bar {\r\n    constructor(gantt, task) {\r\n        this.set_defaults(gantt, task);\r\n        this.prepare();\r\n        this.draw();\r\n        this.bind();\r\n    }\r\n\r\n    set_defaults(gantt, task) {\r\n        this.action_completed = false;\r\n        this.gantt = gantt;\r\n        this.task = task;\r\n    }\r\n\r\n    prepare() {\r\n        this.prepare_values();\r\n        this.prepare_helpers();\r\n    }\r\n\r\n    prepare_values() {\r\n        this.invalid = this.task.invalid;\r\n        this.height = this.gantt.options.bar_height;\r\n        this.x = this.compute_x();\r\n        this.y = this.compute_y();\r\n        this.corner_radius = this.gantt.options.bar_corner_radius;\r\n        this.duration =\r\n            date_utils.diff(this.task._end, this.task._start, 'hour') /\r\n            this.gantt.options.step;\r\n        this.width = this.gantt.options.column_width * this.duration;\r\n        this.progress_width =\r\n            this.gantt.options.column_width *\r\n                this.duration *\r\n                (this.task.progress / 100) || 0;\r\n        this.group = createSVG('g', {\r\n            class: 'bar-wrapper ' + (this.task.custom_class || ''),\r\n            'data-id': this.task.id,\r\n        });\r\n        this.bar_group = createSVG('g', {\r\n            class: 'bar-group',\r\n            append_to: this.group,\r\n        });\r\n        this.handle_group = createSVG('g', {\r\n            class: 'handle-group',\r\n            append_to: this.group,\r\n        });\r\n        this.relation_group = createSVG('g', {\r\n            class: 'relation-group',\r\n            append_to: this.group,\r\n        });\r\n    }\r\n\r\n    prepare_helpers() {\r\n        SVGElement.prototype.getX = function () {\r\n            return +this.getAttribute('x');\r\n        };\r\n        SVGElement.prototype.getY = function () {\r\n            return +this.getAttribute('y');\r\n        };\r\n        SVGElement.prototype.getWidth = function () {\r\n            return +this.getAttribute('width');\r\n        };\r\n        SVGElement.prototype.getHeight = function () {\r\n            return +this.getAttribute('height');\r\n        };\r\n        SVGElement.prototype.getEndX = function () {\r\n            return this.getX() + this.getWidth();\r\n        };\r\n    }\r\n\r\n    draw() {\r\n        this.draw_bar();\r\n        this.draw_relation_dots();\r\n        this.draw_progress_bar();\r\n        this.draw_label();\r\n        this.draw_resize_handles();\r\n    }\r\n\r\n    draw_bar() {\r\n        this.$bar = createSVG('rect', {\r\n            x: this.x,\r\n            y: this.y,\r\n            width: this.width,\r\n            height: this.height,\r\n            rx: this.corner_radius,\r\n            ry: this.corner_radius,\r\n            class: 'bar',\r\n            append_to: this.bar_group,\r\n        });\r\n\r\n        animateSVG(this.$bar, 'width', 0, this.width);\r\n\r\n        if (this.invalid) {\r\n            this.$bar.classList.add('bar-invalid');\r\n        }\r\n    }\r\n\r\n    draw_progress_bar() {\r\n        if (this.invalid) return;\r\n        this.$bar_progress = createSVG('rect', {\r\n            x: this.x,\r\n            y: this.y,\r\n            width: this.progress_width,\r\n            height: this.height,\r\n            rx: this.corner_radius,\r\n            ry: this.corner_radius,\r\n            class: 'bar-progress',\r\n            append_to: this.bar_group,\r\n        });\r\n\r\n        animateSVG(this.$bar_progress, 'width', 0, this.progress_width);\r\n    }\r\n\r\n    draw_label() {\r\n        createSVG('text', {\r\n            x: this.x + this.width / 2,\r\n            y: this.y + this.height / 2,\r\n            innerHTML: this.task.name,\r\n            class: 'bar-label',\r\n            append_to: this.bar_group,\r\n        });\r\n        // labels get BBox in the next tick\r\n        requestAnimationFrame(() => this.update_label_position());\r\n    }\r\n\r\n    draw_resize_handles() {\r\n        if (this.invalid) return;\r\n\r\n        const bar = this.$bar;\r\n        const handle_width = 8;\r\n\r\n        createSVG('rect', {\r\n            x: bar.getX() + bar.getWidth() - 9,\r\n            y: bar.getY() + 1,\r\n            width: handle_width,\r\n            height: this.height - 2,\r\n            rx: this.corner_radius,\r\n            ry: this.corner_radius,\r\n            class: 'handle right',\r\n            append_to: this.handle_group,\r\n        });\r\n\r\n        createSVG('rect', {\r\n            x: bar.getX() + 1,\r\n            y: bar.getY() + 1,\r\n            width: handle_width,\r\n            height: this.height - 2,\r\n            rx: this.corner_radius,\r\n            ry: this.corner_radius,\r\n            class: 'handle left',\r\n            append_to: this.handle_group,\r\n        });\r\n\r\n        if (this.task.progress && this.task.progress < 100) {\r\n            this.$handle_progress = createSVG('polygon', {\r\n                points: this.get_progress_polygon_points().join(','),\r\n                class: 'handle progress',\r\n                append_to: this.handle_group,\r\n            });\r\n        }\r\n    }\r\n\r\n    draw_relation_dots() {\r\n        if (this.invalid || this.task.custom_class.includes('expanded')) return;\r\n        const bar = this.$bar;\r\n        const dot_diameter = 8;\r\n\r\n        createSVG('rect', {\r\n            x: bar.getX() + bar.getWidth() + 4,\r\n            y: bar.getY() + bar.getHeight() / 2 - dot_diameter / 2,\r\n            width: dot_diameter,\r\n            height: dot_diameter,\r\n            rx: '50%',\r\n            ry: '50%',\r\n            class: 'dot finish',\r\n            append_to: this.relation_group,\r\n        });\r\n\r\n        createSVG('rect', {\r\n            x: bar.getX() - dot_diameter - 4,\r\n            y: bar.getY() + bar.getHeight() / 2 - dot_diameter / 2,\r\n            width: dot_diameter,\r\n            height: dot_diameter,\r\n            rx: '50%',\r\n            ry: '50%',\r\n            class: 'dot start',\r\n            append_to: this.relation_group,\r\n        });\r\n    }\r\n\r\n    get_progress_polygon_points() {\r\n        const bar_progress = this.$bar_progress;\r\n        return [\r\n            bar_progress.getEndX() - 5,\r\n            bar_progress.getY() + bar_progress.getHeight(),\r\n            bar_progress.getEndX() + 5,\r\n            bar_progress.getY() + bar_progress.getHeight(),\r\n            bar_progress.getEndX(),\r\n            bar_progress.getY() + bar_progress.getHeight() - 8.66,\r\n        ];\r\n    }\r\n\r\n    bind() {\r\n        if (this.invalid) return;\r\n        this.setup_click_event();\r\n    }\r\n\r\n    setup_click_event() {\r\n        $.on(this.group, 'focus ' + this.gantt.options.popup_trigger, (e) => {\r\n            if (this.action_completed) {\r\n                // just finished a move action, wait for a few seconds\r\n                return;\r\n            }\r\n            this.show_popup(e);\r\n            this.gantt.unselect_all();\r\n            this.group.classList.add('active');\r\n        });\r\n\r\n        $.on(this.group, 'dblclick', (e) => {\r\n            if (this.action_completed) {\r\n                // just finished a move action, wait for a few seconds\r\n                return;\r\n            }\r\n            this.gantt.trigger_event('click', [this.task]);\r\n        });\r\n    }\r\n\r\n    show_popup(e) {\r\n        if (this.gantt.bar_being_dragged) return;\r\n        const start_date = date_utils.format(\r\n            this.task._start,\r\n            'MMM D',\r\n            this.gantt.options.language\r\n        );\r\n        const end_date = date_utils.format(\r\n            date_utils.add(this.task._end, -1, 'second'),\r\n            'MMM D',\r\n            this.gantt.options.language\r\n        );\r\n        const subtitle = start_date + ' - ' + end_date;\r\n        const posX = e.offsetX || e.layerX;\r\n        const posY = e.offsetY  || e.layerY;\r\n\r\n        this.gantt.show_popup({\r\n            x: posX,\r\n            y: posY,\r\n            target_element: this.$bar,\r\n            title: this.task.name,\r\n            subtitle: subtitle,\r\n            task: this.task,\r\n        });\r\n    }\r\n\r\n    update_bar_position({ x = null, width = null, handle = null }) {\r\n        const bar = this.$bar;\r\n\r\n        if (x) {\r\n            // get all x + width (end of bars) values of parent task\r\n            const x_of_end_parents = this.task.dependencies.map((dep) => {\r\n                return (\r\n                    this.gantt.get_bar(dep).$bar.getX() +\r\n                    this.gantt.get_bar(dep).$bar.getWidth()\r\n                );\r\n            });\r\n            x_of_end_parents.sort((a, b) => a - b);\r\n\r\n            // child task must not go before parent\r\n            if (this.task.relationship_options.hard.includes(true)) {\r\n                if (this.task.relationship_options.type.includes('SS')) {\r\n                    // get all x values (start task bar) of parent task\r\n                    const xs = this.task.dependencies.map((dep) => {\r\n                        return this.gantt.get_bar(dep).$bar.getX();\r\n                    });\r\n\r\n                    const valid_x = xs.reduce((prev, curr) => {\r\n                        return x >= curr;\r\n                    }, x);\r\n                    if (!valid_x) {\r\n                        width = null;\r\n                        return;\r\n                    }\r\n                }\r\n                if (this.task.relationship_options.type.includes('FS')) {\r\n                    // get all x + width (end of bars) values of parent task\r\n                    const x_of_end_parents = this.task.dependencies.map(\r\n                        (dep) => {\r\n                            return (\r\n                                this.gantt.get_bar(dep).$bar.getX() +\r\n                                this.gantt.get_bar(dep).$bar.getWidth()\r\n                            );\r\n                        }\r\n                    );\r\n                    x_of_end_parents.sort((a, b) => a - b);\r\n                    if (this.task.relationship_options.asap.includes(true)) {\r\n                        // get all x + width (end of bars) values of parent task\r\n                        const x_of_end_parents = this.task.dependencies.map(\r\n                            (dep, index) => {\r\n                                return (\r\n                                    this.gantt.get_bar(dep).$bar.getX() +\r\n                                    this.gantt.get_bar(dep).$bar.getWidth() +\r\n                                    this.task.relationship_options.delay[\r\n                                        index\r\n                                    ] *\r\n                                        this.gantt.options.column_width\r\n                                );\r\n                            }\r\n                        );\r\n                        x_of_end_parents.sort((a, b) => a - b);\r\n\r\n                        const valid_x = x_of_end_parents.reduce(\r\n                            (prev, curr) => {\r\n                                return (x = curr);\r\n                            },\r\n                            x\r\n                        );\r\n                        if (!valid_x) {\r\n                            width = null;\r\n                            return;\r\n                        }\r\n                    } else {\r\n                        const valid_x = x_of_end_parents.reduce(\r\n                            (prev, curr) => {\r\n                                return x >= curr;\r\n                            },\r\n                            x\r\n                        );\r\n                        if (!valid_x) {\r\n                            width = null;\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n                if (this.task.relationship_options.type.includes('FF')) {\r\n                    const valid_x = x_of_end_parents.reduce((prev, curr) => {\r\n                        return curr >= x + this.$bar.getWidth();\r\n                    }, x);\r\n                    if (!valid_x) {\r\n                        width = null;\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.update_attr(bar, 'x', x);\r\n        }\r\n        if (width && width >= this.gantt.options.column_width) {\r\n            this.update_attr(bar, 'width', width);\r\n        }\r\n        this.update_label_position();\r\n        this.update_handle_position();\r\n        this.update_dots_position();\r\n        this.update_progressbar_position();\r\n        this.update_arrow_position();\r\n    }\r\n\r\n    date_changed() {\r\n        let changed = false;\r\n        const { new_start_date, new_end_date } = this.compute_start_end_date();\r\n\r\n        if (Number(this.task._start) !== Number(new_start_date)) {\r\n            changed = true;\r\n            this.task._start = new_start_date;\r\n        }\r\n\r\n        if (Number(this.task._end) !== Number(new_end_date)) {\r\n            changed = true;\r\n            this.task._end = new_end_date;\r\n        }\r\n\r\n        if (!changed) return;\r\n        this.gantt.trigger_event('date_change', [\r\n            this.task,\r\n            new_start_date,\r\n            date_utils.add(new_end_date, -1, 'second'),\r\n        ]);\r\n    }\r\n\r\n    progress_changed() {\r\n        const new_progress = this.compute_progress();\r\n        this.task.progress = new_progress;\r\n        this.gantt.trigger_event('progress_change', [this.task, new_progress]);\r\n    }\r\n\r\n    set_action_completed() {\r\n        this.action_completed = true;\r\n        setTimeout(() => (this.action_completed = false), 1000);\r\n    }\r\n\r\n    compute_start_end_date() {\r\n        const bar = this.$bar;\r\n        const x_in_units = bar.getX() / this.gantt.options.column_width;\r\n        const new_start_date = date_utils.add(\r\n            this.gantt.gantt_start,\r\n            x_in_units * this.gantt.options.step,\r\n            'hour'\r\n        );\r\n        const width_in_units = bar.getWidth() / this.gantt.options.column_width;\r\n        const new_end_date = date_utils.add(\r\n            new_start_date,\r\n            width_in_units * this.gantt.options.step,\r\n            'hour'\r\n        );\r\n\r\n        return { new_start_date, new_end_date };\r\n    }\r\n\r\n    compute_progress() {\r\n        const progress =\r\n            (this.$bar_progress.getWidth() / this.$bar.getWidth()) * 100;\r\n        return parseInt(progress, 10);\r\n    }\r\n\r\n    compute_x() {\r\n        const { step, column_width } = this.gantt.options;\r\n        const task_start = this.task._start;\r\n        const gantt_start = this.gantt.gantt_start;\r\n\r\n        const diff = date_utils.diff(task_start, gantt_start, 'hour');\r\n        let x = (diff / step) * column_width;\r\n\r\n        if (this.gantt.view_is('Month')) {\r\n            const diff = date_utils.diff(task_start, gantt_start, 'day');\r\n            x = (diff * column_width) / 30;\r\n        }\r\n        return x;\r\n    }\r\n\r\n    compute_y() {\r\n        return (\r\n            this.gantt.options.header_height +\r\n            this.gantt.options.padding +\r\n            this.task._index * (this.height + this.gantt.options.padding)\r\n        );\r\n    }\r\n\r\n    get_snap_position(dx) {\r\n        let odx = dx,\r\n            rem,\r\n            position;\r\n\r\n        if (this.gantt.view_is('Week')) {\r\n            rem = dx % (this.gantt.options.column_width / 7);\r\n            position =\r\n                odx -\r\n                rem +\r\n                (rem < this.gantt.options.column_width / 14\r\n                    ? 0\r\n                    : this.gantt.options.column_width / 7);\r\n        } else if (this.gantt.view_is('Month')) {\r\n            rem = dx % (this.gantt.options.column_width / 30);\r\n            position =\r\n                odx -\r\n                rem +\r\n                (rem < this.gantt.options.column_width / 60\r\n                    ? 0\r\n                    : this.gantt.options.column_width / 30);\r\n        } else {\r\n            rem = dx % this.gantt.options.column_width;\r\n            position =\r\n                odx -\r\n                rem +\r\n                (rem < this.gantt.options.column_width / 2\r\n                    ? 0\r\n                    : this.gantt.options.column_width);\r\n        }\r\n        return position;\r\n    }\r\n\r\n    update_attr(element, attr, value) {\r\n        value = +value;\r\n        if (!isNaN(value)) {\r\n            element.setAttribute(attr, value);\r\n        }\r\n        return element;\r\n    }\r\n\r\n    update_progressbar_position() {\r\n        this.$bar_progress.setAttribute('x', this.$bar.getX());\r\n        this.$bar_progress.setAttribute(\r\n            'width',\r\n            this.$bar.getWidth() * (this.task.progress / 100)\r\n        );\r\n    }\r\n\r\n    update_label_position() {\r\n        const bar = this.$bar,\r\n            label = this.group.querySelector('.bar-label');\r\n\r\n        if (label.getBBox().width > bar.getWidth()) {\r\n            label.classList.add('big');\r\n            label.setAttribute('x', bar.getX() + bar.getWidth() + 20);\r\n        } else {\r\n            label.classList.remove('big');\r\n            label.setAttribute('x', bar.getX() + bar.getWidth() / 2);\r\n        }\r\n    }\r\n\r\n    update_handle_position() {\r\n        const bar = this.$bar;\r\n        this.handle_group\r\n            .querySelector('.handle.left')\r\n            .setAttribute('x', bar.getX() + 1);\r\n        this.handle_group\r\n            .querySelector('.handle.right')\r\n            .setAttribute('x', bar.getEndX() - 9);\r\n        const handle = this.group.querySelector('.handle.progress');\r\n        handle &&\r\n            handle.setAttribute('points', this.get_progress_polygon_points());\r\n    }\r\n\r\n    update_dots_position() {\r\n        const bar = this.$bar;\r\n        this.relation_group\r\n            .querySelector('.dot.start')\r\n            .setAttribute('x', bar.getX() - 8 - 4); //8 - dot_radius\r\n        this.relation_group\r\n            .querySelector('.dot.finish')\r\n            .setAttribute('x', bar.getX() + bar.getWidth() + 4);\r\n    }\r\n\r\n    update_arrow_position() {\r\n        this.arrows = this.arrows || [];\r\n        for (let arrow of this.arrows) {\r\n            arrow.update();\r\n        }\r\n    }\r\n}\r\n\r\nfunction isFunction(functionToCheck) {\r\n    var getType = {};\r\n    return (\r\n        functionToCheck &&\r\n        getType.toString.call(functionToCheck) === '[object Function]'\r\n    );\r\n}\r\n","import { createSVG } from './svg_utils';\r\n\r\nexport default class Arrow {\r\n    constructor(gantt, from_task, to_task, relationship_type) {\r\n        this.gantt = gantt;\r\n        this.from_task = from_task;\r\n        this.to_task = to_task;\r\n        this.relationship_type = relationship_type;\r\n\r\n        this.calculate_path();\r\n        this.draw();\r\n    }\r\n\r\n    calculate_path() {\r\n        let start_x =\r\n            this.from_task.$bar.getX() + this.from_task.$bar.getWidth();\r\n        if (this.relationship_type === 'SS') {\r\n            start_x = this.from_task.$bar.getX();\r\n        }\r\n\r\n        // const condition = () =>\r\n        //     this.to_task.$bar.getX() < start_x + this.gantt.options.padding &&\r\n        //     start_x > this.from_task.$bar.getX() + this.gantt.options.padding;\r\n\r\n        // while (condition()) {\r\n        //     start_x -= 10;\r\n        // }\r\n\r\n        const start_y =\r\n            this.gantt.options.header_height +\r\n            this.gantt.options.bar_height +\r\n            (this.gantt.options.padding + this.gantt.options.bar_height) *\r\n            this.from_task.task._index +\r\n            this.gantt.options.padding -\r\n            this.from_task.$bar.getHeight() / 2;\r\n\r\n        let end_x = this.to_task.$bar.getX() - this.gantt.options.padding / 2;\r\n        if (this.relationship_type === 'FF') {\r\n            end_x = this.to_task.$bar.getX() + this.to_task.$bar.getWidth();\r\n        }\r\n\r\n        const end_y =\r\n            this.gantt.options.header_height +\r\n            this.gantt.options.bar_height / 2 +\r\n            (this.gantt.options.padding + this.gantt.options.bar_height) *\r\n            this.to_task.task._index +\r\n            this.gantt.options.padding;\r\n\r\n        const arrow_padding = 8;\r\n        const from_is_below_to = start_y > end_y;\r\n        const curve = this.gantt.options.arrow_curve;\r\n        const clockwise = from_is_below_to ? 1 : 0;\r\n        const curve_y = from_is_below_to ? -curve : curve;\r\n        const offset = from_is_below_to\r\n            ? end_y + this.gantt.options.arrow_curve\r\n            : end_y - this.gantt.options.arrow_curve;\r\n\r\n        if (this.relationship_type === 'FS') {\r\n            this.lines = [\r\n                createSVG('line', {\r\n                    x1: start_x,\r\n                    y1: start_y,\r\n                    x2: start_x + arrow_padding,\r\n                    y2: start_y,\r\n                }),\r\n                createSVG('line', {\r\n                    x1: start_x + arrow_padding,\r\n                    y1: start_y,\r\n                    x2: start_x + arrow_padding,\r\n                    y2: end_y,\r\n                }),\r\n                createSVG('line', {\r\n                    x1: start_x + arrow_padding,\r\n                    y1: end_y,\r\n                    x2: end_x,\r\n                    y2: end_y,\r\n                }),\r\n                createSVG('line', {\r\n                    x1: end_x,\r\n                    y1: end_y,\r\n                    x2: end_x - 4,\r\n                    y2: end_y + 4,\r\n                }),\r\n                createSVG('line', {\r\n                    x1: end_x,\r\n                    y1: end_y,\r\n                    x2: end_x - 4,\r\n                    y2: end_y - 4,\r\n                }),\r\n            ];\r\n            if (\r\n                // конец родительского бара >= начало дочернего\r\n                this.from_task.$bar.getX() +\r\n                this.from_task.$bar.getWidth() +\r\n                this.gantt.options.padding >\r\n                this.to_task.$bar.getX()\r\n            ) {\r\n                if (from_is_below_to) {\r\n                    this.lines = [\r\n                        createSVG('line', {\r\n                            x1: start_x,\r\n                            y1: start_y,\r\n                            x2: start_x + arrow_padding,\r\n                            y2: start_y,\r\n                        }),\r\n                        createSVG('line', {\r\n                            x1: start_x + arrow_padding,\r\n                            y1: start_y,\r\n                            x2: start_x + arrow_padding,\r\n                            y2: end_y + this.gantt.options.padding,\r\n                        }),\r\n                        createSVG('line', {\r\n                            x1: start_x + arrow_padding,\r\n                            y1: end_y + this.gantt.options.padding,\r\n                            x2: end_x - arrow_padding,\r\n                            y2: end_y + this.gantt.options.padding,\r\n                        }),\r\n                        createSVG('line', {\r\n                            x1: end_x - arrow_padding,\r\n                            y1: end_y + this.gantt.options.padding,\r\n                            x2: end_x - arrow_padding,\r\n                            y2: end_y,\r\n                        }),\r\n                        createSVG('line', {\r\n                            x1: end_x - arrow_padding,\r\n                            y1: end_y,\r\n                            x2: end_x,\r\n                            y2: end_y,\r\n                        }),\r\n                        createSVG('line', {\r\n                            x1: end_x,\r\n                            y1: end_y,\r\n                            x2: end_x - 4,\r\n                            y2: end_y + 4,\r\n                        }),\r\n                        createSVG('line', {\r\n                            x1: end_x,\r\n                            y1: end_y,\r\n                            x2: end_x - 4,\r\n                            y2: end_y - 4,\r\n                        }),\r\n                    ];\r\n                } else {\r\n                    this.lines = [\r\n                        createSVG('line', {\r\n                            x1: start_x,\r\n                            y1: start_y,\r\n                            x2: start_x + arrow_padding,\r\n                            y2: start_y,\r\n                        }),\r\n                        createSVG('line', {\r\n                            x1: start_x + arrow_padding,\r\n                            y1: start_y,\r\n                            x2: start_x + arrow_padding,\r\n                            y2: end_y - this.gantt.options.padding,\r\n                        }),\r\n                        createSVG('line', {\r\n                            x1: start_x + arrow_padding,\r\n                            y1: end_y - this.gantt.options.padding,\r\n                            x2: end_x - arrow_padding,\r\n                            y2: end_y - this.gantt.options.padding,\r\n                        }),\r\n                        createSVG('line', {\r\n                            x1: end_x - arrow_padding,\r\n                            y1: end_y - this.gantt.options.padding,\r\n                            x2: end_x - arrow_padding,\r\n                            y2: end_y,\r\n                        }),\r\n                        createSVG('line', {\r\n                            x1: end_x - arrow_padding,\r\n                            y1: end_y,\r\n                            x2: end_x,\r\n                            y2: end_y,\r\n                        }),\r\n                        createSVG('line', {\r\n                            x1: end_x,\r\n                            y1: end_y,\r\n                            x2: end_x - 4,\r\n                            y2: end_y + 4,\r\n                        }),\r\n                        createSVG('line', {\r\n                            x1: end_x,\r\n                            y1: end_y,\r\n                            x2: end_x - 4,\r\n                            y2: end_y - 4,\r\n                        }),\r\n                    ];\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.relationship_type === 'SS') {\r\n            this.path = `\r\n            M ${start_x} ${start_y}\r\n            a ${curve} ${curve} 0 0 0 -${curve}  ${curve}\r\n            V ${offset}\r\n            a ${curve} ${curve} 0 0 ${clockwise} ${curve} ${curve_y}\r\n            L ${end_x} ${end_y}\r\n            m -4 -4\r\n            l 4 4\r\n            l -4 4`;\r\n            if (from_is_below_to) {\r\n                this.path = `\r\n            M ${start_x} ${start_y}\r\n            a ${curve} ${curve} 0 0 1 -${curve} -${curve}\r\n            V ${offset}\r\n            a ${curve} ${curve} 0 0 ${clockwise} ${curve} ${curve_y}\r\n            L ${end_x} ${end_y}\r\n                m -4 -4\r\n                l 4 4\r\n                l -4 4`;\r\n            }\r\n\r\n            if (\r\n                this.to_task.$bar.getX() <\r\n                this.from_task.$bar.getX() + this.gantt.options.padding - 20\r\n            ) {\r\n                const down_1 = from_is_below_to\r\n                    ? -this.gantt.options.padding + 2 * curve\r\n                    : this.gantt.options.padding - curve;\r\n                const down_2 =\r\n                    this.to_task.$bar.getY() +\r\n                    this.to_task.$bar.getHeight() / 2 -\r\n                    curve_y;\r\n                const left =\r\n                    this.to_task.$bar.getX() - this.gantt.options.padding;\r\n\r\n                this.path = `\r\n                M ${start_x} ${start_y}\r\n                a ${curve} ${curve} 0 0 0 -${curve}  ${curve}\r\n                v ${down_1}\r\n                a ${curve} ${curve} 0 0 1 -${curve} ${curve}\r\n                H ${left}\r\n                a ${curve} ${curve} 0 0 ${clockwise} -${curve} ${curve_y}\r\n                V ${down_2}\r\n                a ${curve} ${curve} 0 0 ${clockwise} ${curve} ${curve_y}\r\n                L ${end_x} ${end_y}\r\n                m -4 -4\r\n                l 4 4\r\n                l -4 4`;\r\n                if (from_is_below_to) {\r\n                    this.path = `\r\n                M ${start_x} ${start_y}\r\n                a ${curve} ${curve} 0 0 1 -${curve} -${curve}\r\n                v ${down_1}\r\n                a ${curve} ${curve} 0 0 0 -${curve} -${curve}\r\n                H ${left}\r\n                a ${curve} ${curve} 0 0 ${clockwise} -${curve} ${curve_y}\r\n                V ${down_2}\r\n                a ${curve} ${curve} 0 0 ${clockwise} ${curve} ${curve_y}\r\n                L ${end_x} ${end_y}\r\n                m -4 -4\r\n                l 4 4\r\n                l -4 4`;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.relationship_type === 'FF') {\r\n            const down_1 = from_is_below_to\r\n                ? -this.gantt.options.padding + 2 * curve\r\n                : this.gantt.options.padding - curve;\r\n            const down_2 =\r\n                this.to_task.$bar.getY() +\r\n                this.to_task.$bar.getHeight() / 2 -\r\n                curve_y;\r\n            let right =\r\n                this.to_task.$bar.getX() +\r\n                this.to_task.$bar.getWidth() +\r\n                this.gantt.options.padding / 2;\r\n\r\n            this.path = `\r\n                        M ${start_x} ${start_y}\r\n                        h 4\r\n                        a ${curve} ${curve} 0 0 1 ${curve} ${curve}\r\n                        v ${down_1}\r\n                        a ${curve} ${curve} 0 0 1 -${curve} ${curve}\r\n                        H ${right + 5}\r\n                        a ${curve} ${curve} 0 0 ${clockwise} -${curve} ${curve_y}\r\n                        V ${down_2}\r\n                        a ${curve} ${curve} 0 0 1 -${curve} ${curve_y}\r\n                        L ${end_x} ${end_y}\r\n                        m 4 -4\r\n                        l -4 4\r\n                        l 4 4`;\r\n            if (from_is_below_to) {\r\n                this.path = `\r\n                        M ${start_x} ${start_y}\r\n                        h 4\r\n                        a ${curve} ${curve} 0 0 0 ${curve} -${curve}\r\n                        v ${down_1}\r\n                        a ${curve} ${curve} 0 0 0 -${curve} -${curve}\r\n                        H ${right + 5}\r\n                        a ${curve} ${curve} 0 0 ${clockwise} -${curve} ${curve_y}\r\n                        V ${down_2}\r\n                        a ${curve} ${curve} 0 0 0 -${curve} ${curve_y}\r\n                        L ${end_x} ${end_y}\r\n                        m 4 -4\r\n                        l -4 4\r\n                        l 4 4`;\r\n            }\r\n\r\n            if (\r\n                this.to_task.$bar.getX() + this.to_task.$bar.getWidth() >\r\n                this.from_task.$bar.getX() + this.from_task.$bar.getWidth()\r\n            ) {\r\n                this.path = `\r\n                        M ${start_x} ${start_y}\r\n                        h 4\r\n                        a ${curve} ${curve} 0 0 1 ${curve} ${curve}\r\n                        v ${down_1}\r\n                        a ${curve} ${curve} 0 0 0 ${curve} ${curve}\r\n                        H ${right - 5}\r\n                        a ${curve} ${curve} 0 0 1 ${curve} ${curve_y}\r\n                        V ${down_2}\r\n                        a ${curve} ${curve} 0 0 1 -${curve} ${curve_y}\r\n                        L ${end_x} ${end_y}\r\n                        m 4 -4\r\n                        l -4 4\r\n                        l 4 4`;\r\n                if (from_is_below_to) {\r\n                    this.path = `\r\n                        M ${start_x} ${start_y}\r\n                        h 4\r\n                        a ${curve} ${curve} 0 0 0 ${curve} -${curve}\r\n                        v ${down_1}\r\n                        a ${curve} ${curve} 0 0 1 ${curve} -${curve}\r\n                        H ${right - 5}\r\n                        a ${curve} ${curve} 0 0 0 ${curve} ${curve_y}\r\n                        V ${down_2}\r\n                        a ${curve} ${curve} 0 0 0 -${curve} ${curve_y}\r\n                        L ${end_x} ${end_y}\r\n                        m 4 -4\r\n                        l -4 4\r\n                        l 4 4`;\r\n                }\r\n            }\r\n\r\n            if (\r\n                Math.abs(\r\n                    this.to_task.$bar.getX() +\r\n                    this.to_task.$bar.getWidth() -\r\n                    (this.from_task.$bar.getX() +\r\n                        this.from_task.$bar.getWidth())\r\n                ) < 9\r\n            ) {\r\n                right = start_x > end_x ? start_x + 5 : end_x + 5;\r\n                this.path = `\r\n                        M ${start_x} ${start_y}\r\n                        H ${right - 1}\r\n                        a ${curve} ${curve} 0 0 1 ${curve} ${curve}\r\n                        V ${down_2}\r\n                        a ${curve} ${curve} 0 0 1 -${curve} ${curve_y}\r\n                        L ${end_x} ${end_y}\r\n                        m 4 -4\r\n                        l -4 4\r\n                        l 4 4`;\r\n                if (from_is_below_to) {\r\n                    this.path = `\r\n                        M ${start_x} ${start_y}\r\n                        H ${right - 1}\r\n                        a ${curve} ${curve} 0 0 0 ${curve} -${curve}\r\n                        V ${down_2}\r\n                        a ${curve} ${curve} 0 0 0 -${curve} ${curve_y}\r\n                        L ${end_x} ${end_y}\r\n                        m 4 -4\r\n                        l -4 4\r\n                        l 4 4`;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.lines.forEach((line) => {\r\n            line.addEventListener('mouseover', () => {\r\n                line.parentNode.classList.add('hover');\r\n            });\r\n            line.addEventListener('click', () => {\r\n                const parent_bar = line.parentNode.dataset.from;\r\n                const child_bar = line.parentNode.dataset.to;\r\n                const index_of_task =\r\n                    this.to_task.task.dependencies.indexOf(parent_bar);\r\n                    this.gantt.trigger_event('open_popup_arrow', [\r\n                        parent_bar,\r\n                        child_bar,\r\n                        index_of_task,\r\n                    ]);\r\n\r\n                // this.to_task.task.dependencies.splice(index_of_task, 1);\r\n                // this.to_task.task.relationship_options.type.splice(\r\n                //     index_of_task,\r\n                //     1\r\n                // );\r\n                // this.to_task.task.relationship_options.hard.splice(\r\n                //     index_of_task,\r\n                //     1\r\n                // );\r\n                // this.to_task.task.relationship_options.asap.splice(\r\n                //     index_of_task,\r\n                //     1\r\n                // );\r\n                // this.to_task.task.relationship_options.delay.splice(\r\n                //     index_of_task,\r\n                //     1\r\n                // );\r\n\r\n            });\r\n        });\r\n        this.lines.forEach((line) => {\r\n            line.addEventListener('mouseleave', () => {\r\n                line.parentNode.classList.remove('hover');\r\n            });\r\n        });\r\n    }\r\n\r\n    draw() {\r\n        this.element = createSVG('g', {\r\n            'data-from': this.from_task.task.id,\r\n            'data-to': this.to_task.task.id,\r\n        });\r\n        this.lines.forEach((line) => {\r\n            this.element.appendChild(line);\r\n        });\r\n    }\r\n\r\n    update() {\r\n        this.calculate_path();\r\n        this.element.innerHTML = '';\r\n        this.lines.forEach((line) => {\r\n            this.element.appendChild(line);\r\n        });\r\n    }\r\n}\r\n","export default class Popup {\r\n    constructor(parent, custom_html) {\r\n        this.parent = parent;\r\n        this.custom_html = custom_html;\r\n        this.make();\r\n    }\r\n\r\n    make() {\r\n        this.parent.innerHTML = `\r\n            <div class=\"title\"></div>\r\n            <div class=\"subtitle\"></div>\r\n            <div class=\"pointer\"></div>\r\n        `;\r\n\r\n        this.hide();\r\n\r\n        this.title = this.parent.querySelector('.title');\r\n        this.subtitle = this.parent.querySelector('.subtitle');\r\n        this.pointer = this.parent.querySelector('.pointer');\r\n    }\r\n\r\n    show(options) {\r\n        if (!options.target_element) {\r\n            throw new Error('target_element is required to show popup');\r\n        }\r\n        if (!options.position) {\r\n            options.position = 'left';\r\n        }\r\n        const target_element = options.target_element;\r\n\r\n        if (this.custom_html) {\r\n            let html = this.custom_html(options.task);\r\n            html += '<div class=\"pointer\"></div>';\r\n            this.parent.innerHTML = html;\r\n            this.pointer = this.parent.querySelector('.pointer');\r\n        } else {\r\n            // set data\r\n            this.title.innerHTML = options.title;\r\n            this.subtitle.innerHTML = options.subtitle;\r\n            this.parent.style.width = this.parent.clientWidth + 'px';\r\n        }\r\n\r\n        // set position\r\n        let position_meta;\r\n        if (target_element instanceof HTMLElement) {\r\n            position_meta = target_element.getBoundingClientRect();\r\n        } else if (target_element instanceof SVGElement) {\r\n            position_meta = options.target_element.getBBox();\r\n        }\r\n        if (options.position === 'left') {\r\n            this.parent.style.left = `${options.x + 10}px`;\r\n            this.parent.style.top = `${options.y - 10}px`;\r\n\r\n            this.pointer.style.transform = 'rotateZ(90deg)';\r\n            this.pointer.style.left = '-7px';\r\n            this.pointer.style.top = '2px';\r\n        }\r\n\r\n        this.parent.style.opacity = 1;\r\n    }\r\n\r\n    hide() {\r\n        this.parent.style.opacity = 0;\r\n        this.parent.style.left = 0;\r\n    }\r\n}","import date_utils from './date_utils';\r\nimport { $, createSVG } from './svg_utils';\r\nimport Bar from './bar';\r\nimport Arrow from './arrow';\r\nimport Popup from './popup';\r\n\r\nimport './gantt.scss';\r\n\r\nconst VIEW_MODE = {\r\n    QUARTER_DAY: 'Quarter Day',\r\n    HALF_DAY: 'Half Day',\r\n    DAY: 'Day',\r\n    WEEK: 'Week',\r\n    MONTH: 'Month',\r\n    YEAR: 'Year',\r\n};\r\n\r\nexport default class Gantt {\r\n    constructor(wrapper, tasks, options) {\r\n        this.setup_wrapper(wrapper);\r\n        this.setup_options(options);\r\n        this.setup_tasks(tasks);\r\n        // initialize with default view mode\r\n        this.change_view_mode();\r\n        this.bind_events();\r\n    }\r\n\r\n    setup_wrapper(element) {\r\n        let svg_element, wrapper_element;\r\n\r\n        // CSS Selector is passed\r\n        if (typeof element === 'string') {\r\n            element = document.querySelector(element);\r\n        }\r\n\r\n        // get the SVGElement\r\n        if (element instanceof HTMLElement) {\r\n            wrapper_element = element;\r\n            svg_element = element.querySelector('svg');\r\n        } else if (element instanceof SVGElement) {\r\n            svg_element = element;\r\n        } else {\r\n            throw new TypeError(\r\n                'Frappé Gantt only supports usage of a string CSS selector,' +\r\n                \" HTML DOM element or SVG DOM element for the 'element' parameter\"\r\n            );\r\n        }\r\n\r\n        // svg element\r\n        if (!svg_element) {\r\n            // create it\r\n            this.$svg = createSVG('svg', {\r\n                append_to: wrapper_element,\r\n                class: 'gantt',\r\n            });\r\n        } else {\r\n            this.$svg = svg_element;\r\n            this.$svg.classList.add('gantt');\r\n        }\r\n\r\n        // wrapper element\r\n        this.$container = document.createElement('div');\r\n        this.$container.classList.add('gantt-container');\r\n\r\n        const parent_element = this.$svg.parentElement;\r\n        parent_element.appendChild(this.$container);\r\n        this.$container.appendChild(this.$svg);\r\n\r\n        // popup wrapper\r\n        this.popup_wrapper = document.createElement('div');\r\n        this.popup_wrapper.classList.add('popup-wrapper');\r\n        this.$container.appendChild(this.popup_wrapper);\r\n    }\r\n\r\n    setup_options(options) {\r\n        const default_options = {\r\n            header_height: 50,\r\n            column_width: 30,\r\n            step: 24,\r\n            view_modes: [...Object.values(VIEW_MODE)],\r\n            bar_height: 20,\r\n            bar_corner_radius: 3,\r\n            arrow_curve: 5,\r\n            padding: 18,\r\n            view_mode: 'Day',\r\n            date_format: 'YYYY-MM-DD',\r\n            popup_trigger: 'click',\r\n            custom_popup_html: null,\r\n            language: 'en',\r\n        };\r\n        this.options = Object.assign({}, default_options, options);\r\n    }\r\n\r\n    setup_tasks(tasks) {\r\n        // prepare tasks\r\n        this.tasks = tasks.map((task, i) => {\r\n            // convert to Date objects\r\n            task._start = date_utils.parse(task.start);\r\n            task._end = date_utils.parse(task.end);\r\n\r\n            // make task invalid if duration too large\r\n            if (date_utils.diff(task._end, task._start, 'year') > 10) {\r\n                task.end = null;\r\n            }\r\n\r\n            // cache index\r\n            task._index = i;\r\n\r\n            // invalid dates\r\n            if (!task.start && !task.end) {\r\n                const today = date_utils.today();\r\n                task._start = today;\r\n                task._end = date_utils.add(today, 2, 'day');\r\n            }\r\n\r\n            if (!task.start && task.end) {\r\n                task._start = date_utils.add(task._end, -2, 'day');\r\n            }\r\n\r\n            if (task.start && !task.end) {\r\n                task._end = date_utils.add(task._start, 2, 'day');\r\n            }\r\n\r\n            // if hours is not set, assume the last day is full day\r\n            // e.g: 2018-09-09 becomes 2018-09-09 23:59:59\r\n            const task_end_values = date_utils.get_date_values(task._end);\r\n            if (task_end_values.slice(3).every((d) => d === 0)) {\r\n                task._end = date_utils.add(task._end, 24, 'hour');\r\n            }\r\n\r\n            // invalid flag\r\n            if (!task.start || !task.end) {\r\n                task.invalid = true;\r\n            }\r\n\r\n            // dependencies\r\n            if (typeof task.dependencies === 'string' || !task.dependencies) {\r\n                let deps = [];\r\n                if (task.dependencies) {\r\n                    deps = task.dependencies\r\n                        .split(',')\r\n                        .map((d) => d.trim())\r\n                        .filter((d) => d);\r\n                }\r\n                task.dependencies = deps;\r\n            }\r\n\r\n            // relationship_types\r\n            if (\r\n                typeof task.relationship_options.type === 'string' ||\r\n                !task.relationship_options.type\r\n            ) {\r\n                let relationship_types = [];\r\n                if (task.relationship_options.type) {\r\n                    relationship_types = task.relationship_options.type\r\n                        .split(',')\r\n                        .map((d) => d.trim())\r\n                        .filter((d) => d);\r\n                }\r\n                task.relationship_options.type = relationship_types;\r\n            }\r\n\r\n            // uids\r\n            if (!task.id) {\r\n                task.id = generate_id(task);\r\n            }\r\n\r\n            return task;\r\n        });\r\n\r\n        this.setup_dependencies();\r\n    }\r\n\r\n    setup_dependencies() {\r\n        this.dependency_map = {};\r\n        for (let t of this.tasks) {\r\n            for (let d of t.dependencies) {\r\n                this.dependency_map[d] = this.dependency_map[d] || [];\r\n                this.dependency_map[d].push(t.id);\r\n            }\r\n        }\r\n    }\r\n\r\n    refresh(tasks) {\r\n        this.setup_tasks(tasks);\r\n        this.change_view_mode();\r\n    }\r\n\r\n    change_view_mode(mode = this.options.view_mode) {\r\n        this.update_view_scale(mode);\r\n        this.setup_dates();\r\n        this.render();\r\n        // fire viewmode_change event\r\n        this.trigger_event('view_change', [mode]);\r\n    }\r\n\r\n    update_view_scale(view_mode) {\r\n        this.options.view_mode = view_mode;\r\n\r\n        if (view_mode === VIEW_MODE.DAY) {\r\n            this.options.step = 24;\r\n            this.options.column_width = 38;\r\n        } else if (view_mode === VIEW_MODE.HALF_DAY) {\r\n            this.options.step = 24 / 2;\r\n            this.options.column_width = 38;\r\n        } else if (view_mode === VIEW_MODE.QUARTER_DAY) {\r\n            this.options.step = 24 / 4;\r\n            this.options.column_width = 38;\r\n        } else if (view_mode === VIEW_MODE.WEEK) {\r\n            this.options.step = 24 * 7;\r\n            this.options.column_width = 140;\r\n        } else if (view_mode === VIEW_MODE.MONTH) {\r\n            this.options.step = 24 * 30;\r\n            this.options.column_width = 120;\r\n        } else if (view_mode === VIEW_MODE.YEAR) {\r\n            this.options.step = 24 * 365;\r\n            this.options.column_width = 120;\r\n        }\r\n    }\r\n\r\n    setup_dates() {\r\n        this.setup_gantt_dates();\r\n        this.setup_date_values();\r\n    }\r\n\r\n    setup_gantt_dates() {\r\n        this.gantt_start = this.gantt_end = null;\r\n\r\n        for (let task of this.tasks) {\r\n            // set global start and end date\r\n            if (!this.gantt_start || task._start < this.gantt_start) {\r\n                this.gantt_start = task._start;\r\n            }\r\n            if (!this.gantt_end || task._end > this.gantt_end) {\r\n                this.gantt_end = task._end;\r\n            }\r\n        }\r\n\r\n        this.gantt_start = date_utils.start_of(this.gantt_start, 'day');\r\n        this.gantt_end = date_utils.start_of(this.gantt_end, 'day');\r\n\r\n        // add date padding on both sides\r\n        if (this.view_is([VIEW_MODE.QUARTER_DAY, VIEW_MODE.HALF_DAY])) {\r\n            this.gantt_start = date_utils.add(this.gantt_start, -7, 'day');\r\n            this.gantt_end = date_utils.add(this.gantt_end, 7, 'day');\r\n        } else if (this.view_is(VIEW_MODE.MONTH)) {\r\n            this.gantt_start = date_utils.start_of(this.gantt_start, 'year');\r\n            this.gantt_end = date_utils.add(this.gantt_end, 1, 'year');\r\n        } else if (this.view_is(VIEW_MODE.YEAR)) {\r\n            this.gantt_start = date_utils.add(this.gantt_start, -2, 'year');\r\n            this.gantt_end = date_utils.add(this.gantt_end, 2, 'year');\r\n        } else {\r\n            this.gantt_start = date_utils.add(this.gantt_start, -1, 'month');\r\n            this.gantt_end = date_utils.add(this.gantt_end, 1, 'month');\r\n        }\r\n    }\r\n\r\n    setup_date_values() {\r\n        this.dates = [];\r\n        let cur_date = null;\r\n\r\n        while (cur_date === null || cur_date < this.gantt_end) {\r\n            if (!cur_date) {\r\n                cur_date = date_utils.clone(this.gantt_start);\r\n            } else {\r\n                if (this.view_is(VIEW_MODE.YEAR)) {\r\n                    cur_date = date_utils.add(cur_date, 1, 'year');\r\n                } else if (this.view_is(VIEW_MODE.MONTH)) {\r\n                    cur_date = date_utils.add(cur_date, 1, 'month');\r\n                } else {\r\n                    cur_date = date_utils.add(\r\n                        cur_date,\r\n                        this.options.step,\r\n                        'hour'\r\n                    );\r\n                }\r\n            }\r\n            this.dates.push(cur_date);\r\n        }\r\n    }\r\n\r\n    bind_events() {\r\n        this.bind_grid_click();\r\n        this.bind_bar_events();\r\n    }\r\n\r\n    render() {\r\n        this.clear();\r\n        this.setup_layers();\r\n        this.make_grid();\r\n        this.make_dates();\r\n        this.make_bars();\r\n        this.make_arrows();\r\n        this.map_arrows_on_bars();\r\n        this.set_width();\r\n        this.set_scroll_position();\r\n    }\r\n\r\n    setup_layers() {\r\n        this.layers = {};\r\n        const layers = ['grid', 'date', 'arrow', 'progress', 'bar', 'details'];\r\n        // make group layers\r\n        for (let layer of layers) {\r\n            this.layers[layer] = createSVG('g', {\r\n                class: layer,\r\n                append_to: this.$svg,\r\n            });\r\n        }\r\n    }\r\n\r\n    make_grid() {\r\n        this.make_grid_background();\r\n        this.make_grid_rows();\r\n        this.make_grid_header();\r\n        this.make_grid_ticks();\r\n        this.make_grid_highlights();\r\n    }\r\n\r\n    make_grid_background() {\r\n        const grid_width = this.dates.length * this.options.column_width;\r\n        const grid_height =\r\n            this.options.header_height +\r\n            this.options.padding +\r\n            (this.options.bar_height + this.options.padding) *\r\n            this.tasks.length;\r\n\r\n        createSVG('rect', {\r\n            x: 0,\r\n            y: 0,\r\n            width: grid_width,\r\n            height: grid_height,\r\n            class: 'grid-background',\r\n            append_to: this.layers.grid,\r\n        });\r\n\r\n        $.attr(this.$svg, {\r\n            height: grid_height + this.options.padding + 100,\r\n            width: '100%',\r\n        });\r\n    }\r\n\r\n    make_grid_rows() {\r\n        const rows_layer = createSVG('g', { append_to: this.layers.grid });\r\n        const lines_layer = createSVG('g', { append_to: this.layers.grid });\r\n\r\n        const row_width = this.dates.length * this.options.column_width;\r\n        const row_height = this.options.bar_height + this.options.padding;\r\n\r\n        let row_y = this.options.header_height + this.options.padding / 2;\r\n\r\n        for (let task of this.tasks) {\r\n            createSVG('rect', {\r\n                x: 0,\r\n                y: row_y,\r\n                width: row_width,\r\n                height: row_height,\r\n                class: 'grid-row',\r\n                append_to: rows_layer,\r\n            });\r\n\r\n            createSVG('line', {\r\n                x1: 0,\r\n                y1: row_y + row_height,\r\n                x2: row_width,\r\n                y2: row_y + row_height,\r\n                class: 'row-line',\r\n                append_to: lines_layer,\r\n            });\r\n\r\n            row_y += this.options.bar_height + this.options.padding;\r\n        }\r\n    }\r\n\r\n    make_grid_header() {\r\n        const header_width = this.dates.length * this.options.column_width;\r\n        const header_height = this.options.header_height + 10;\r\n        createSVG('rect', {\r\n            x: 0,\r\n            y: 0,\r\n            width: header_width,\r\n            height: header_height,\r\n            class: 'grid-header',\r\n            append_to: this.layers.grid,\r\n        });\r\n    }\r\n\r\n    make_grid_ticks() {\r\n        let tick_x = 0;\r\n        let tick_y = this.options.header_height + this.options.padding / 2;\r\n        let tick_height =\r\n            (this.options.bar_height + this.options.padding) *\r\n            this.tasks.length;\r\n\r\n        for (let date of this.dates) {\r\n            let tick_class = 'tick';\r\n            // thick tick for monday\r\n            if (this.view_is(VIEW_MODE.DAY) && date.getDate() === 1) {\r\n                tick_class += ' thick';\r\n            }\r\n            // thick tick for first week\r\n            if (\r\n                this.view_is(VIEW_MODE.WEEK) &&\r\n                date.getDate() >= 1 &&\r\n                date.getDate() < 8\r\n            ) {\r\n                tick_class += ' thick';\r\n            }\r\n            // thick ticks for quarters\r\n            if (\r\n                this.view_is(VIEW_MODE.MONTH) &&\r\n                (date.getMonth() + 1) % 3 === 0\r\n            ) {\r\n                tick_class += ' thick';\r\n            }\r\n\r\n            createSVG('path', {\r\n                d: `M ${tick_x} ${tick_y} v ${tick_height}`,\r\n                class: tick_class,\r\n                append_to: this.layers.grid,\r\n            });\r\n\r\n            if (this.view_is(VIEW_MODE.MONTH)) {\r\n                tick_x +=\r\n                    (date_utils.get_days_in_month(date) *\r\n                        this.options.column_width) /\r\n                    30;\r\n            } else {\r\n                tick_x += this.options.column_width;\r\n            }\r\n        }\r\n    }\r\n\r\n    make_grid_highlights() {\r\n        // highlight today's date\r\n        if (this.view_is(VIEW_MODE.DAY)) {\r\n            const x =\r\n                (date_utils.diff(date_utils.today(), this.gantt_start, 'hour') /\r\n                    this.options.step) *\r\n                this.options.column_width;\r\n            const y = 0;\r\n\r\n            const width = this.options.column_width;\r\n            const height =\r\n                (this.options.bar_height + this.options.padding) *\r\n                this.tasks.length +\r\n                this.options.header_height +\r\n                this.options.padding / 2;\r\n\r\n            createSVG('rect', {\r\n                x,\r\n                y,\r\n                width,\r\n                height,\r\n                class: 'today-highlight',\r\n                append_to: this.layers.grid,\r\n            });\r\n        }\r\n    }\r\n\r\n    make_dates() {\r\n        for (let date of this.get_dates_to_draw()) {\r\n            createSVG('text', {\r\n                x: date.lower_x,\r\n                y: date.lower_y,\r\n                innerHTML: date.lower_text,\r\n                class: 'lower-text',\r\n                append_to: this.layers.date,\r\n            });\r\n\r\n            if (date.upper_text) {\r\n                const $upper_text = createSVG('text', {\r\n                    x: date.upper_x,\r\n                    y: date.upper_y,\r\n                    innerHTML: date.upper_text,\r\n                    class: 'upper-text',\r\n                    append_to: this.layers.date,\r\n                });\r\n\r\n                // remove out-of-bound dates\r\n                if (\r\n                    $upper_text.getBBox().x2 > this.layers.grid.getBBox().width\r\n                ) {\r\n                    $upper_text.remove();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    get_dates_to_draw() {\r\n        let last_date = null;\r\n        const dates = this.dates.map((date, i) => {\r\n            const d = this.get_date_info(date, last_date, i);\r\n            last_date = date;\r\n            return d;\r\n        });\r\n        return dates;\r\n    }\r\n\r\n    get_date_info(date, last_date, i) {\r\n        if (!last_date) {\r\n            last_date = date_utils.add(date, 1, 'year');\r\n        }\r\n        const date_text = {\r\n            'Quarter Day_lower': date_utils.format(\r\n                date,\r\n                'HH',\r\n                this.options.language\r\n            ),\r\n            'Half Day_lower': date_utils.format(\r\n                date,\r\n                'HH',\r\n                this.options.language\r\n            ),\r\n            Day_lower:\r\n                date.getDate() !== last_date.getDate()\r\n                    ? date_utils.format(date, 'D', this.options.language)\r\n                    : '',\r\n            Week_lower:\r\n                date.getMonth() !== last_date.getMonth()\r\n                    ? date_utils.format(date, 'D MMM', this.options.language)\r\n                    : date_utils.format(date, 'D', this.options.language),\r\n            Month_lower: date_utils.format(date, 'MMMM', this.options.language),\r\n            Year_lower: date_utils.format(date, 'YYYY', this.options.language),\r\n            'Quarter Day_upper':\r\n                date.getDate() !== last_date.getDate()\r\n                    ? date_utils.format(date, 'D MMM', this.options.language)\r\n                    : '',\r\n            'Half Day_upper':\r\n                date.getDate() !== last_date.getDate()\r\n                    ? date.getMonth() !== last_date.getMonth()\r\n                        ? date_utils.format(\r\n                            date,\r\n                            'D MMM',\r\n                            this.options.language\r\n                        )\r\n                        : date_utils.format(date, 'D', this.options.language)\r\n                    : '',\r\n            Day_upper:\r\n                date.getMonth() !== last_date.getMonth()\r\n                    ? date_utils.format(date, 'MMMM', this.options.language)\r\n                    : '',\r\n            Week_upper:\r\n                date.getMonth() !== last_date.getMonth()\r\n                    ? date_utils.format(date, 'MMMM', this.options.language)\r\n                    : '',\r\n            Month_upper:\r\n                date.getFullYear() !== last_date.getFullYear()\r\n                    ? date_utils.format(date, 'YYYY', this.options.language)\r\n                    : '',\r\n            Year_upper:\r\n                date.getFullYear() !== last_date.getFullYear()\r\n                    ? date_utils.format(date, 'YYYY', this.options.language)\r\n                    : '',\r\n        };\r\n\r\n        const base_pos = {\r\n            x: i * this.options.column_width,\r\n            lower_y: this.options.header_height,\r\n            upper_y: this.options.header_height - 25,\r\n        };\r\n\r\n        const x_pos = {\r\n            'Quarter Day_lower': (this.options.column_width * 4) / 2,\r\n            'Quarter Day_upper': 0,\r\n            'Half Day_lower': (this.options.column_width * 2) / 2,\r\n            'Half Day_upper': 0,\r\n            Day_lower: this.options.column_width / 2,\r\n            Day_upper: (this.options.column_width * 30) / 2,\r\n            Week_lower: 0,\r\n            Week_upper: (this.options.column_width * 4) / 2,\r\n            Month_lower: this.options.column_width / 2,\r\n            Month_upper: (this.options.column_width * 12) / 2,\r\n            Year_lower: this.options.column_width / 2,\r\n            Year_upper: (this.options.column_width * 30) / 2,\r\n        };\r\n\r\n        return {\r\n            upper_text: date_text[`${this.options.view_mode}_upper`],\r\n            lower_text: date_text[`${this.options.view_mode}_lower`],\r\n            upper_x: base_pos.x + x_pos[`${this.options.view_mode}_upper`],\r\n            upper_y: base_pos.upper_y,\r\n            lower_x: base_pos.x + x_pos[`${this.options.view_mode}_lower`],\r\n            lower_y: base_pos.lower_y,\r\n        };\r\n    }\r\n\r\n    make_bars() {\r\n        this.bars = this.tasks.map((task) => {\r\n            const bar = new Bar(this, task);\r\n            this.layers.bar.appendChild(bar.group);\r\n            return bar;\r\n        });\r\n    }\r\n\r\n    make_arrows() {\r\n        this.arrows = [];\r\n        for (let task of this.tasks) {\r\n            let arrows = [];\r\n            arrows = task.dependencies\r\n                .map((task_id) => {\r\n                    const dependency = this.get_task(task_id);\r\n                    if (!dependency) return;\r\n                    let task_index = task.dependencies.indexOf(task_id);\r\n                    const arrow = new Arrow(\r\n                        this,\r\n                        this.bars[dependency._index], // from_task\r\n                        this.bars[task._index], // to_task\r\n                        task.relationship_options.type[task_index]\r\n                    );\r\n                    this.layers.arrow.appendChild(arrow.element);\r\n                    return arrow;\r\n                })\r\n                .filter(Boolean); // filter falsy values\r\n            this.arrows = this.arrows.concat(arrows);\r\n        }\r\n    }\r\n\r\n    map_arrows_on_bars() {\r\n        for (let bar of this.bars) {\r\n            bar.arrows = this.arrows.filter((arrow) => {\r\n                return (\r\n                    arrow.from_task.task.id === bar.task.id ||\r\n                    arrow.to_task.task.id === bar.task.id\r\n                );\r\n            });\r\n        }\r\n    }\r\n\r\n    set_width() {\r\n        const cur_width = this.$svg.getBoundingClientRect().width;\r\n        const actual_width = this.$svg\r\n            .querySelector('.grid .grid-row')\r\n            .getAttribute('width');\r\n        if (cur_width < actual_width) {\r\n            this.$svg.setAttribute('width', actual_width);\r\n        }\r\n    }\r\n\r\n    set_scroll_position() {\r\n        const parent_element = this.$svg.parentElement;\r\n        if (!parent_element) return;\r\n\r\n        const hours_before_first_task = date_utils.diff(\r\n            this.get_oldest_starting_date(),\r\n            this.gantt_start,\r\n            'hour'\r\n        );\r\n\r\n        const scroll_pos =\r\n            (hours_before_first_task / this.options.step) *\r\n            this.options.column_width -\r\n            this.options.column_width;\r\n\r\n        parent_element.scrollLeft = scroll_pos;\r\n    }\r\n\r\n    bind_grid_click() {\r\n        $.on(\r\n            this.$svg,\r\n            this.options.popup_trigger,\r\n            '.grid-row, .grid-header',\r\n            () => {\r\n                this.unselect_all();\r\n                this.hide_popup();\r\n            }\r\n        );\r\n    }\r\n\r\n    bind_bar_events() {\r\n        let is_dragging = false;\r\n        let x_on_start = 0;\r\n        let y_on_start = 0;\r\n        let is_resizing_left = false;\r\n        let is_resizing_right = false;\r\n        let parent_bar_id = null;\r\n        let bars = []; // instanceof Bar\r\n        let new_relation = '';\r\n        this.bar_being_dragged = null;\r\n\r\n        function action_in_progress() {\r\n            return is_dragging || is_resizing_left || is_resizing_right;\r\n        }\r\n\r\n        $.on(\r\n            this.$svg,\r\n            'mousedown',\r\n            '.bar-wrapper, .handle, .dot',\r\n            (e, element) => {\r\n                const bar_wrapper = $.closest('.bar-wrapper', element);\r\n\r\n                if (element.classList.contains('left')) {\r\n                    is_resizing_left = true;\r\n                } else if (element.classList.contains('right')) {\r\n                    is_resizing_right = true;\r\n                } else if (element.classList.contains('bar-wrapper')) {\r\n                    is_dragging = true;\r\n                } else if (element.classList.contains('finish')) {\r\n                    new_relation += 'F';\r\n                } else if (element.classList.contains('start')) {\r\n                    new_relation += 'S';\r\n                }\r\n\r\n                bar_wrapper.classList.add('active');\r\n\r\n                x_on_start = e.offsetX;\r\n                y_on_start = e.offsetY;\r\n\r\n                parent_bar_id = bar_wrapper.getAttribute('data-id');\r\n                const ids = [\r\n                    parent_bar_id,\r\n                    ...this.get_all_dependent_tasks(parent_bar_id),\r\n                ];\r\n                bars = ids.map((id) => this.get_bar(id));\r\n\r\n                this.bar_being_dragged = parent_bar_id;\r\n\r\n                bars.forEach((bar) => {\r\n                    const $bar = bar.$bar;\r\n                    $bar.ox = $bar.getX();\r\n                    $bar.oy = $bar.getY();\r\n                    $bar.owidth = $bar.getWidth();\r\n                    $bar.finaldx = 0;\r\n                });\r\n            }\r\n        );\r\n\r\n        $.on(this.$svg, 'mousemove', (e) => {\r\n            if (!action_in_progress()) return;\r\n            const dx = e.offsetX - x_on_start;\r\n            const dy = e.offsetY - y_on_start;\r\n\r\n            bars.forEach((bar) => {\r\n                const $bar = bar.$bar;\r\n                $bar.finaldx = this.get_snap_position(dx);\r\n                this.hide_popup();\r\n                if (is_resizing_left) {\r\n                    if (parent_bar_id === bar.task.id) {\r\n                        bar.update_bar_position({\r\n                            x: $bar.ox + $bar.finaldx,\r\n                            width: $bar.owidth - $bar.finaldx,\r\n                        });\r\n                    } else {\r\n                        bar.update_bar_position({\r\n                            x: $bar.ox + $bar.finaldx,\r\n                        });\r\n                    }\r\n                } else if (is_resizing_right) {\r\n                    if (parent_bar_id === bar.task.id) {\r\n                        bar.update_bar_position({\r\n                            x: $bar.ox,\r\n                            width: $bar.owidth + $bar.finaldx,\r\n                        });\r\n                    } else {\r\n                        bar.update_bar_position({\r\n                            x: $bar.ox,\r\n                        });\r\n                    }\r\n                } else if (is_dragging) {\r\n                    bar.update_bar_position({ x: $bar.ox + $bar.finaldx });\r\n                }\r\n            });\r\n        });\r\n\r\n        document.addEventListener('mouseup', (e) => {\r\n            if (is_dragging || is_resizing_left || is_resizing_right) {\r\n                bars.forEach((bar) => bar.group.classList.remove('active'));\r\n            }\r\n\r\n            is_dragging = false;\r\n            is_resizing_left = false;\r\n            is_resizing_right = false;\r\n            new_relation = '';\r\n        });\r\n\r\n        $.on(this.$svg, 'mouseup', (e) => {\r\n            this.bar_being_dragged = null;\r\n            bars.forEach((bar) => {\r\n                const $bar = bar.$bar;\r\n                if (!$bar.finaldx) return;\r\n                bar.date_changed();\r\n                bar.set_action_completed();\r\n            });\r\n        });\r\n        // new depen\r\n        $.on(this.$svg, 'mouseup', '.dot', (e, element) => {\r\n            if (element.classList.contains('finish')) {\r\n                new_relation += 'F';\r\n            } else if (element.classList.contains('start')) {\r\n                new_relation += 'S';\r\n            }\r\n\r\n            const bar_wrapper = $.closest('.bar-wrapper', element);\r\n            let child_bar_id = bar_wrapper.getAttribute('data-id');\r\n            let child_bar = this.get_task(child_bar_id);\r\n            let parent_bar = this.get_task(parent_bar_id);\r\n            // проверка на то, что такая связь уже есть\r\n            if (child_bar.dependencies.indexOf(parent_bar.id) !== -1) {\r\n                console.log('такая связь уже есть');\r\n                return false;\r\n            }\r\n            if (child_bar_id === parent_bar_id) {\r\n                return false;\r\n            }\r\n\r\n            if (\r\n                ['FS'].includes(new_relation) && //'SS', 'FF',\r\n                !this.get_all_dependent_tasks(child_bar_id).includes(\r\n                    parent_bar_id\r\n                )\r\n            ) {\r\n                child_bar.dependencies.push(parent_bar_id);\r\n                child_bar.relationship_options.type.push(new_relation);\r\n                child_bar.relationship_options.hard.push(true);\r\n                child_bar.relationship_options.delay.push(0);\r\n                child_bar.relationship_options.asap.push(true);\r\n\r\n                this.trigger_event('new_depndency', [\r\n                    this.get_task(parent_bar_id),\r\n                    this.get_task(child_bar_id),\r\n                    new_relation,\r\n                ]);\r\n                this.refresh(this.tasks);\r\n            }\r\n        });\r\n\r\n        this.bind_bar_progress();\r\n    }\r\n\r\n    bind_bar_progress() {\r\n        let x_on_start = 0;\r\n        let y_on_start = 0;\r\n        let is_resizing = null;\r\n        let bar = null;\r\n        let $bar_progress = null;\r\n        let $bar = null;\r\n\r\n        $.on(this.$svg, 'mousedown', '.handle.progress', (e, handle) => {\r\n            is_resizing = true;\r\n            x_on_start = e.offsetX;\r\n            y_on_start = e.offsetY;\r\n\r\n            const $bar_wrapper = $.closest('.bar-wrapper', handle);\r\n            const id = $bar_wrapper.getAttribute('data-id');\r\n            bar = this.get_bar(id);\r\n\r\n            $bar_progress = bar.$bar_progress;\r\n            $bar = bar.$bar;\r\n\r\n            $bar_progress.finaldx = 0;\r\n            $bar_progress.owidth = $bar_progress.getWidth();\r\n            $bar_progress.min_dx = -$bar_progress.getWidth();\r\n            $bar_progress.max_dx = $bar.getWidth() - $bar_progress.getWidth();\r\n        });\r\n\r\n        $.on(this.$svg, 'mousemove', (e) => {\r\n            if (!is_resizing) return;\r\n            let dx = e.offsetX - x_on_start;\r\n            let dy = e.offsetY - y_on_start;\r\n\r\n            if (dx > $bar_progress.max_dx) {\r\n                dx = $bar_progress.max_dx;\r\n            }\r\n            if (dx < $bar_progress.min_dx) {\r\n                dx = $bar_progress.min_dx;\r\n            }\r\n\r\n            const $handle = bar.$handle_progress;\r\n            $.attr($bar_progress, 'width', $bar_progress.owidth + dx);\r\n            $.attr($handle, 'points', bar.get_progress_polygon_points());\r\n            $bar_progress.finaldx = dx;\r\n        });\r\n\r\n        $.on(this.$svg, 'mouseup', () => {\r\n            is_resizing = false;\r\n            if (!($bar_progress && $bar_progress.finaldx)) return;\r\n            bar.progress_changed();\r\n            bar.set_action_completed();\r\n        });\r\n    }\r\n\r\n    get_all_dependent_tasks(task_id) {\r\n        let out = [];\r\n        let to_process = [task_id];\r\n        while (to_process.length) {\r\n            const deps = to_process.reduce((acc, curr) => {\r\n                acc = acc.concat(this.dependency_map[curr]);\r\n                return acc;\r\n            }, []);\r\n\r\n            out = out.concat(deps);\r\n            to_process = deps.filter((d) => !to_process.includes(d));\r\n        }\r\n\r\n        return out.filter(Boolean);\r\n    }\r\n\r\n    get_snap_position(dx) {\r\n        let odx = dx,\r\n            rem,\r\n            position;\r\n\r\n        if (this.view_is(VIEW_MODE.WEEK)) {\r\n            rem = dx % (this.options.column_width / 7);\r\n            position =\r\n                odx -\r\n                rem +\r\n                (rem < this.options.column_width / 14\r\n                    ? 0\r\n                    : this.options.column_width / 7);\r\n        } else if (this.view_is(VIEW_MODE.MONTH)) {\r\n            rem = dx % (this.options.column_width / 30);\r\n            position =\r\n                odx -\r\n                rem +\r\n                (rem < this.options.column_width / 60\r\n                    ? 0\r\n                    : this.options.column_width / 30);\r\n        } else {\r\n            rem = dx % this.options.column_width;\r\n            position =\r\n                odx -\r\n                rem +\r\n                (rem < this.options.column_width / 2\r\n                    ? 0\r\n                    : this.options.column_width);\r\n        }\r\n        return position;\r\n    }\r\n\r\n    unselect_all() {\r\n        [...this.$svg.querySelectorAll('.bar-wrapper')].forEach((el) => {\r\n            el.classList.remove('active');\r\n        });\r\n    }\r\n\r\n    view_is(modes) {\r\n        if (typeof modes === 'string') {\r\n            return this.options.view_mode === modes;\r\n        }\r\n\r\n        if (Array.isArray(modes)) {\r\n            return modes.some((mode) => this.options.view_mode === mode);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    get_task(id) {\r\n        return this.tasks.find((task) => {\r\n            return task.id === id;\r\n        });\r\n    }\r\n\r\n    get_bar(id) {\r\n        return this.bars.find((bar) => {\r\n            return bar.task.id === id;\r\n        });\r\n    }\r\n\r\n    show_popup(options) {\r\n        if (!this.popup) {\r\n            this.popup = new Popup(\r\n                this.popup_wrapper,\r\n                this.options.custom_popup_html\r\n            );\r\n        }\r\n        this.popup.show(options);\r\n    }\r\n\r\n    hide_popup() {\r\n        this.popup && this.popup.hide();\r\n    }\r\n\r\n    trigger_event(event, args) {\r\n        if (this.options['on_' + event]) {\r\n            this.options['on_' + event].apply(null, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Gets the oldest starting date from the list of tasks\r\n     *\r\n     * @returns Date\r\n     * @memberof Gantt\r\n     */\r\n    get_oldest_starting_date() {\r\n        return this.tasks\r\n            .map((task) => task._start)\r\n            .reduce((prev_date, cur_date) =>\r\n                cur_date <= prev_date ? cur_date : prev_date\r\n            );\r\n    }\r\n\r\n    /**\r\n     * Clear all elements from the parent svg element\r\n     *\r\n     * @memberof Gantt\r\n     */\r\n    clear() {\r\n        this.$svg.innerHTML = '';\r\n    }\r\n}\r\n\r\nGantt.VIEW_MODE = VIEW_MODE;\r\n\r\nfunction generate_id(task) {\r\n    return task.name + '_' + Math.random().toString(36).slice(2, 12);\r\n}\r\n"],"names":["YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","month_names","en","es","ru","ptBr","fr","tr","zh","date_utils","parse","date","date_separator","time_separator","Date","date_parts","time_parts","parts","split","map","val","parseInt","vals","length","parseFloat","concat","to_string","with_time","TypeError","this","get_date_values","i","padStart","date_string","time_string","format","format_string","lang","values","d","format_map","YYYY","MM","DD","HH","mm","ss","SSS","D","MMMM","MMM","str","formatted_values","Object","keys","sort","a","b","forEach","key","includes","replace","push","value","diff","date_a","date_b","scale","milliseconds","seconds","hours","minutes","days","months","years","endsWith","Math","floor","today","slice","now","add","qty","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","start_of","scores","should_reset","_scale","clone","get_days_in_month","no_of_days","month","year","targetLength","padString","String","repeat","$","expr","con","document","querySelector","createSVG","tag","attrs","elem","createElementNS","attr","append_to","appendChild","innerHTML","setAttribute","animateSVG","svgElement","from","to","animatedSvgElement","dur","begin","animEl","attributeName","animateElement","calcMode","keyTimes","keySplines","cubic_bezier","getAnimationElement","event","createEvent","initEvent","eventName","dispatchEvent","name","ease","linear","on","element","selector","callback","delegate","bind","off","handler","removeEventListener","addEventListener","e","delegatedTarget","target","closest","call","matches","parentNode","getAttribute","Bar","constructor","gantt","task","set_defaults","prepare","draw","action_completed","prepare_values","prepare_helpers","invalid","height","options","bar_height","x","compute_x","y","compute_y","corner_radius","bar_corner_radius","duration","_end","_start","step","width","column_width","progress_width","progress","group","class","custom_class","id","bar_group","handle_group","relation_group","SVGElement","prototype","getX","getY","getWidth","getHeight","getEndX","draw_bar","draw_relation_dots","draw_progress_bar","draw_label","draw_resize_handles","$bar","rx","ry","classList","$bar_progress","requestAnimationFrame","update_label_position","bar","$handle_progress","points","get_progress_polygon_points","join","dot_diameter","bar_progress","setup_click_event","popup_trigger","show_popup","unselect_all","trigger_event","bar_being_dragged","subtitle","language","posX","offsetX","layerX","posY","offsetY","layerY","target_element","title","update_bar_position","handle","x_of_end_parents","dependencies","dep","get_bar","relationship_options","hard","type","reduce","prev","curr","asap","index","delay","update_attr","update_handle_position","update_dots_position","update_progressbar_position","update_arrow_position","date_changed","changed","new_start_date","new_end_date","compute_start_end_date","Number","progress_changed","new_progress","compute_progress","set_action_completed","setTimeout","x_in_units","gantt_start","width_in_units","task_start","view_is","header_height","padding","_index","get_snap_position","dx","rem","position","odx","isNaN","label","getBBox","remove","arrows","arrow","update","Arrow","from_task","to_task","relationship_type","calculate_path","start_x","start_y","end_x","end_y","from_is_below_to","curve","arrow_curve","clockwise","curve_y","offset","lines","x1","y1","x2","y2","path","down_1","down_2","left","right","abs","line","parent_bar","dataset","child_bar","index_of_task","indexOf","Popup","parent","custom_html","make","hide","pointer","show","Error","html","style","clientWidth","HTMLElement","getBoundingClientRect","top","transform","opacity","VIEW_MODE","QUARTER_DAY","HALF_DAY","WEEK","Gantt","wrapper","tasks","setup_wrapper","setup_options","setup_tasks","change_view_mode","bind_events","svg_element","wrapper_element","$svg","$container","createElement","parentElement","popup_wrapper","default_options","view_modes","view_mode","date_format","custom_popup_html","assign","start","end","every","deps","trim","filter","relationship_types","random","toString","generate_id","setup_dependencies","dependency_map","t","refresh","mode","update_view_scale","setup_dates","render","setup_gantt_dates","setup_date_values","gantt_end","dates","cur_date","bind_grid_click","bind_bar_events","clear","setup_layers","make_grid","make_dates","make_bars","make_arrows","map_arrows_on_bars","set_width","set_scroll_position","layers","layer","make_grid_background","make_grid_rows","make_grid_header","make_grid_ticks","make_grid_highlights","grid_width","grid_height","grid","rows_layer","lines_layer","row_width","row_height","row_y","tick_x","tick_y","tick_height","tick_class","get_dates_to_draw","lower_x","lower_y","lower_text","upper_text","$upper_text","upper_x","upper_y","last_date","get_date_info","date_text","Day_lower","Week_lower","Month_lower","Year_lower","Day_upper","Week_upper","Month_upper","Year_upper","base_pos","x_pos","bars","task_id","dependency","get_task","task_index","Boolean","cur_width","actual_width","parent_element","scroll_pos","get_oldest_starting_date","scrollLeft","hide_popup","is_dragging","x_on_start","y_on_start","is_resizing_left","is_resizing_right","parent_bar_id","new_relation","bar_wrapper","contains","ids","get_all_dependent_tasks","ox","oy","owidth","finaldx","child_bar_id","console","log","bind_bar_progress","is_resizing","min_dx","max_dx","$handle","out","to_process","acc","querySelectorAll","el","modes","Array","isArray","some","find","popup","args","apply","prev_date"],"mappings":"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"}